server:
  servlet:
    encoding:
      force: true
      charset: UTF-8
    multipart:
      maxFileSize: 10MB # 파일 하나의 최대 크기
      maxRequestSize: 30MB  # 한 번에 최대 업로드 가능 용량

spring:
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  profiles:
    active: dev
    include: secret
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: '${custom.dev_database.url}'
    username: '${custom.dev_database.username}'
    password: '${custom.dev_database.password}'
  jpa:
    hibernate:
      ddl-auto: update
      generate-ddl: true
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        use_sql_comments: true
  # OAuth2 credentials
  security:
    oauth2:
      client:
        registration:
          google:
            client-id:
            client-secret:
            scope: profile, email

          naver:
            client-id:
            client-secret:
            redirect-uri: https://2481-180-70-117-80.ngrok-free.app/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver

          kakao:
            client-id:
            client-secret:
            redirect-uri: https://2481-180-70-117-80.ngrok-free.app/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: account_email, profile_nickname, profile_image
            client-name: Kakao

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# Swagger springdoc-ui configuration
springdoc:
  packages-to-scan: com.example.vblogserver
  default-consumes-media-type : application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: vblog-api.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
    cache:
      disabled: true

# jwt 토큰
jwt:
  secretKey:
  access:
    expiration: 600000 # 10분 # 1시간(60분=3600000) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    header: Authorization
  refresh:
    expiration: 1209600000 # 2주 (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
    header: Refresh

# AWS S3
cloud:
  aws:
    s3:
      bucket:
    stack:
      auto: false
    region:
      static:
    credentials:
      accessKey:
      secretKey:

# spring actuator
management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, prometheus, swagger-ui, openapi
  endpoint:
    health:
      enabled: true
    prometheus:
      enabled: true
